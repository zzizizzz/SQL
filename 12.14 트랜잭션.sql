/*
트랜잭션
    데이터베이스의 상태를 변환시키는 하나의 논리적인 기능을 수행하기 위한 논리적인 작업의 단위다.
    예) 홍길동이 이순신에게 100만원을 이체한다.
        1. 홍길동의 계좌에서 잔액을 100만원 감소시킨다. - UPDATE 작업
        2. 이순신의 계좌에서 잔액을 100만원 증가시킨다. - UPDATE 작업
        3. 홍길동의 최근 이체내역에 이순신에게 100만원 송금한 내역을 추가한다. - INSERT 작업
        
        + 논리적인 작업의 단위(그룹, 묶음, 연산들) = 감소 UPDATE + 증가 UPDATE + 추가 INSERT
        + 논리적인 작업의 단위를 구성하는 모든 SQL 명령이 성공적으로 완료되어야 하나의 작업 단위가 
          완료된것이고, 이 경우에 데이터베이스에 반영시킨다.
        
    트랜잭션 관련 명령어
        COMMIT
            논리적인 작업 단위를 구성하는 모든 작업이 성공적으로 완료되었을 때,
            데이터베이스의 트랜잭션 관리자에게
            해당 작업 단위내에서 실행했던 처리 결과를 영구적으로 데이터베이스에 반영시키게 한다.
        ROLLBACK 
            논리적인 작업 단위를 구성하는 작업 중에서 오류 발생했을때
            데이터베이스의 트랜잭션 관리자에게
            해당 작업 단위내에서 실행했던 처리결과의 데이터 베이스 반영을 취소 시키게 한다.
            
    트랜잭션이 시작과 종료 
        트랜잭션의 시작
            -첫번째 DML 명령문이 실행될 때 새로운 트랜잭션이 시작된다.
*/
-------------------------------------------------------트랜잭션1이 시작됨
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT - 1000000
WHERE 
    NO = 10;                        --트랜잭선1의 연산이다.
    
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT + 1000000
WHERE 
    NO = 20;                        -- 트랜잭션1의 연산이다.
    
INSERT INTO HISTORIES
VALUES (10,20,1000000, SYSDATE);    --트랜잭션1의 연산이다.

COMMIT;                             -- 트랜잭션 1의 모든연산이 오류없이 실행되었기 문에
                                    -- 트랜잭션 관리자에게 트랜잭션1의 처리결과를
                                    -- 영구적으로 데이터베이스에게 반영시키도록 한다.
-------------------------------------------------------트랜잭션1이 종료됨       
-------------------------------------------------------트랜잭션2가 시작됨
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT - 50000
WHERE 
    NO = 70;                        --트랜잭선1의 연산이다.
    
UPDATE ACCOUNTS
SET
    DEPOSIT = DEPOSIT + 50000
WHERE 
    NO = 120;                        --트랜잭선1의 연산이다.
    
INSERT INTO HISTORIES
VALUES (70,120,50000);               --트랜잭선2의 연산이다.

ROLLBACK;                            --트랜잭선2의 INSERT 작업중 오류가 발생하였다.
                                     -- 트랜잭션관리자에게 트랜잭션2의 처리결과를
                                     -- 모두 취소시키도록한다.
-------------------------------------------------------트랜잭션2가 종료됨
-------------------------------------------------------트랜잭션3이 시작됨

                                     














